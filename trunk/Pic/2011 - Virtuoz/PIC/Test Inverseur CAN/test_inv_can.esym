D G "__PCH__" 0 0 ""4.057""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""28-avr.-11""
D G "__TIME__" 0 0 ""17:13:08"" "Carte Test"
d G "PIN_A0" 1 22 "31744"
d G "PIN_A1" 1 23 "31745"
d G "PIN_A2" 1 24 "31746"
d G "PIN_A3" 1 25 "31747"
d G "PIN_A4" 1 26 "31748"
d G "PIN_A5" 1 27 "31749"
d G "PIN_A6" 1 28 "31750"
d G "PIN_B0" 1 30 "31752"
d G "PIN_B1" 1 31 "31753"
d G "PIN_B2" 1 32 "31754"
d G "PIN_B3" 1 33 "31755"
d G "PIN_B4" 1 34 "31756"
d G "PIN_B5" 1 35 "31757"
d G "PIN_B6" 1 36 "31758"
d G "PIN_B7" 1 37 "31759"
d G "PIN_C0" 1 39 "31760"
d G "PIN_C1" 1 40 "31761"
d G "PIN_C2" 1 41 "31762"
d G "PIN_C3" 1 42 "31763"
d G "PIN_C4" 1 43 "31764"
d G "PIN_C5" 1 44 "31765"
d G "PIN_C6" 1 45 "31766"
d G "PIN_C7" 1 46 "31767"
d G "FALSE" 1 49 "0"
d G "TRUE" 1 50 "1"
d G "BYTE" 1 52 "int8"
d G "BOOLEAN" 1 53 "int1"
d G "getc" 1 55 "getch"
d G "fgetc" 1 56 "getch"
d G "getchar" 1 57 "getch"
d G "putc" 1 58 "putchar"
d G "fputc" 1 59 "putchar"
d G "fgets" 1 60 "gets"
d G "fputs" 1 61 "puts"
d G "WDT_TIMEOUT" 1 67 "7"
d G "MCLR_FROM_SLEEP" 1 68 "11"
d G "MCLR_FROM_RUN" 1 69 "15"
d G "NORMAL_POWER_UP" 1 70 "12"
d G "BROWNOUT_RESTART" 1 71 "14"
d G "WDT_FROM_SLEEP" 1 72 "3"
d G "RESET_INSTRUCTION" 1 73 "0"
d G "RTCC_INTERNAL" 1 80 "0"
d G "RTCC_EXT_L_TO_H" 1 81 "32"
d G "RTCC_EXT_H_TO_L" 1 82 "48"
d G "RTCC_DIV_1" 1 84 "8"
d G "RTCC_DIV_2" 1 85 "0"
d G "RTCC_DIV_4" 1 86 "1"
d G "RTCC_DIV_8" 1 87 "2"
d G "RTCC_DIV_16" 1 88 "3"
d G "RTCC_DIV_32" 1 89 "4"
d G "RTCC_DIV_64" 1 90 "5"
d G "RTCC_DIV_128" 1 91 "6"
d G "RTCC_DIV_256" 1 92 "7"
d G "RTCC_OFF" 1 94 "0x80"
d G "RTCC_8_BIT" 1 96 "0x40"
d G "WDT_ON" 1 107 "0x100"
d G "WDT_OFF" 1 108 "0"
d G "T1_DISABLED" 1 115 "0"
d G "T1_INTERNAL" 1 116 "0x85"
d G "T1_EXTERNAL" 1 117 "0x87"
d G "T1_EXTERNAL_SYNC" 1 118 "0x83"
d G "T1_CLK_OUT" 1 120 "8"
d G "T1_DIV_BY_1" 1 122 "0"
d G "T1_DIV_BY_2" 1 123 "0x10"
d G "T1_DIV_BY_4" 1 124 "0x20"
d G "T1_DIV_BY_8" 1 125 "0x30"
d G "T2_DISABLED" 1 130 "0"
d G "T2_DIV_BY_1" 1 131 "4"
d G "T2_DIV_BY_4" 1 132 "5"
d G "T2_DIV_BY_16" 1 133 "6"
d G "T3_DISABLED" 1 139 "0"
d G "T3_INTERNAL" 1 140 "0x85"
d G "T3_EXTERNAL" 1 141 "0x87"
d G "T3_EXTERNAL_SYNC" 1 142 "0x83"
d G "T3_DIV_BY_1" 1 144 "0"
d G "T3_DIV_BY_2" 1 145 "0x10"
d G "T3_DIV_BY_4" 1 146 "0x20"
d G "T3_DIV_BY_8" 1 147 "0x30"
d G "CCP_OFF" 1 153 "0"
d G "CCP_CAPTURE_FE" 1 154 "4"
d G "CCP_CAPTURE_RE" 1 155 "5"
d G "CCP_CAPTURE_DIV_4" 1 156 "6"
d G "CCP_CAPTURE_DIV_16" 1 157 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 158 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 159 "9"
d G "CCP_COMPARE_INT" 1 160 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 161 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 162 "0xB"
d G "CCP_PWM" 1 163 "0xC"
d G "CCP_PWM_PLUS_1" 1 164 "0x1c"
d G "CCP_PWM_PLUS_2" 1 165 "0x2c"
d G "CCP_PWM_PLUS_3" 1 166 "0x3c"
d G "CCP_USE_TIMER3" 1 167 "0x100"
v G "CCP_1" 1 168 "int16"
d G "SPI_MASTER" 1 175 "0x20"
d G "SPI_SLAVE" 1 176 "0x24"
d G "SPI_L_TO_H" 1 177 "0"
d G "SPI_H_TO_L" 1 178 "0x10"
d G "SPI_CLK_DIV_4" 1 179 "0"
d G "SPI_CLK_DIV_16" 1 180 "1"
d G "SPI_CLK_DIV_64" 1 181 "2"
d G "SPI_CLK_T2" 1 182 "3"
d G "SPI_SS_DISABLED" 1 183 "1"
d G "SPI_SAMPLE_AT_END" 1 185 "0x8000"
d G "SPI_XMIT_L_TO_H" 1 186 "0x4000"
d G "UART_ADDRESS" 1 192 "2"
d G "UART_DATA" 1 193 "4"
d G "LVD_LVDIN" 1 197 "0x1F"
d G "LVD_45" 1 198 "0x1E"
d G "LVD_42" 1 199 "0x1D"
d G "LVD_40" 1 200 "0x1C"
d G "LVD_38" 1 201 "0x1B"
d G "LVD_36" 1 202 "0x1A"
d G "LVD_35" 1 203 "0x19"
d G "LVD_33" 1 204 "0x18"
d G "LVD_30" 1 205 "0x17"
d G "LVD_28" 1 206 "0x16"
d G "LVD_27" 1 207 "0x15"
d G "LVD_25" 1 208 "0x14"
d G "LVD_23" 1 209 "0x13"
d G "LVD_21" 1 210 "0x12"
d G "LVD_19" 1 211 "0x11"
d G "OSC_TIMER1" 1 216 "1"
d G "OSC_NORMAL" 1 217 "0"
d G "ADC_OFF" 1 224 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 225 "0x10000"
d G "ADC_CLOCK_DIV_4" 1 226 "0x4000"
d G "ADC_CLOCK_DIV_8" 1 227 "0x0040"
d G "ADC_CLOCK_DIV_16" 1 228 "0x4040"
d G "ADC_CLOCK_DIV_32" 1 229 "0x0080"
d G "ADC_CLOCK_DIV_64" 1 230 "0x4080"
d G "ADC_CLOCK_INTERNAL" 1 231 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 1 234 "7" "None"
d G "ALL_ANALOG" 1 235 "0" "A0 A1 A2 A3 A4"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 1 236 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 1 237 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 1 238 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_VREF_VREF" 1 239 "0x08" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 1 240 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 1 241 "0x0E" "A0"
d G "AN0_VREF_VREF" 1 242 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 1 243 "0x1" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 1 244 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 1 245 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 1 246 "0x8" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 1 247 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 1 248 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 1 249 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 1 253 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 254 "1"
d G "ADC_READ_ONLY" 1 255 "6"
d G "L_TO_H" 1 267 "0x40"
d G "H_TO_L" 1 268 "0"
d G "GLOBAL" 1 270 "0xF2C0"
d G "INT_RTCC" 1 271 "0xF220"
d G "INT_TIMER0" 1 272 "0xF220"
d G "INT_TIMER1" 1 273 "0x9D01"
d G "INT_TIMER2" 1 274 "0x9D02"
d G "INT_TIMER3" 1 275 "0xA002"
d G "INT_EXT" 1 276 "0xF210"
d G "INT_EXT1" 1 277 "0xF008"
d G "INT_EXT2" 1 278 "0xF010"
d G "INT_RB" 1 279 "0xFFF208"
d G "INT_AD" 1 280 "0x9D40"
d G "INT_RDA" 1 281 "0x9D20"
d G "INT_TBE" 1 282 "0x9D10"
d G "INT_SSP" 1 283 "0x9D08"
d G "INT_CCP1" 1 284 "0x9D04"
d G "INT_BUSCOL" 1 285 "0xA008"
d G "INT_LOWVOLT" 1 286 "0xA004"
d G "INT_CANIRX" 1 287 "0xA380"
d G "INT_CANWAKE" 1 288 "0xA340"
d G "INT_CANERR" 1 289 "0xA320"
d G "INT_EEPROM" 1 290 "0xA010"
d G "INT_CANTX2" 1 291 "0xA310"
d G "INT_CANTX1" 1 292 "0xA308"
d G "INT_CANTX0" 1 293 "0xA304"
d G "INT_CANRX1" 1 294 "0xA302"
d G "INT_CANRX0" 1 295 "0xA301"
D G "__CCS_CAN18xxx8_LIB_DEFINES__" 3 20 ""
D G "CAN_DO_DEBUG" 3 23 "FALSE"
D G "CAN_USE_EXTENDED_ID" 3 27 "TRUE"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 3 31 "0" "synchronized jump width (def: 1 x Tq)"
D G "CAN_BRG_PRESCALAR" 3 35 "4" "baud rate generator prescalar (def: 4) ( Tq = (2 x (PRE + 1))/Fosc )"
D G "CAN_BRG_SEG_2_PHASE_TS" 3 39 "TRUE" "phase segment 2 time select bit (def: freely programmable)"
D G "CAN_BRG_SAM" 3 43 "0" "sample of the can bus line (def: bus line is sampled 1 times prior to sample point)"
D G "CAN_BRG_PHASE_SEGMENT_1" 3 47 "5" "phase segment 1 (def: 6 x Tq)"
D G "CAN_BRG_PROPAGATION_TIME" 3 51 "2" "propagation time select (def: 3 x Tq)"
D G "CAN_BRG_WAKE_FILTER" 3 55 "FALSE" "selects can bus line filter for wake up bit"
D G "CAN_BRG_PHASE_SEGMENT_2" 3 59 "5" "phase segment 2 time select (def: 6 x Tq)"
D G "CAN_USE_RX_DOUBLE_BUFFER" 3 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 3 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 3 71 "0"
V G "CANCON" 3 83 "{int1 void0,int3 win,int1 abat,int3 reqop}"
V G "CANSTAT" 3 95 "{int1 void0,int3 icode,int1 void4,int3 opmode}"
V G "COMSTAT" 3 108 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}"
V G "BRGCON1" 3 115 "{int6 brp,int2 sjw}"
V G "BRGCON2" 3 124 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}"
V G "BRGCON3" 3 133 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}"
V G "CIOCON" 3 142 "{int4 void3210,int1 cancap,int1 endrhi,int2 void76}"
V G "TXB0CON" 3 155 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB1CON" 3 156 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB2CON" 3 157 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXBaCON" 3 158 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
D G "RX0MASK" 3 181 "0xF1B" "rxm0eidl"
D G "RX1MASK" 3 182 "0xF1F" "rxm1eidl"
D G "RX0FILTER0" 3 183 "0xF03" "rxf0eidl"
D G "RX0FILTER1" 3 184 "0xF07" "rxf1eidl"
D G "RX1FILTER2" 3 185 "0xF0B" "rxf2eidl"
D G "RX1FILTER3" 3 186 "0xF0F" "rxf3eidl"
D G "RX1FILTER4" 3 187 "0xF13" "rxf4eidl"
D G "RX1FILTER5" 3 188 "0xF17" "rxf5eidl"
D G "RXB0ID" 3 189 "0xF64" "rxb0eidl"
D G "RXB1ID" 3 190 "0xF54" "rxb1eidl"
D G "TXB0ID" 3 191 "0xF44" "txb0eidl"
D G "TXB1ID" 3 192 "0xF34" "txb1eidl"
D G "TXB2ID" 3 193 "0xF24" "tsb2eidl"
D G "TXRXBaID" 3 194 "0xF64"
V G "TXB0DLC" 3 211 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB1DLC" 3 212 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB2DLC" 3 213 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXBaDLC" 3 214 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "RXB0CON" 3 236 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "RXB1CON" 3 246 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "TXRXBaSIDL" 3 269 "{int3 void012,int1 ext,int1 srr,int3 void567}"
V G "RXB0DLC" 3 280 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXB1DLC" 3 281 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXBaDLC" 3 282 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
D G "CAN_MASK_ACCEPT_ALL" 3 337 "0"
F G "can_init" 3 360 "void()"
F G "can_set_baud" 3 361 "void()"
V L "mode" 3 362 "CAN_OP_MODE"
F G "can_set_mode" 3 362 "void(CAN_OP_MODE mode)"
V L "addr" 3 363 "*int8"
V L "id" 3 363 "int32"
V L "ext" 3 363 "int8"
F G "can_set_id" 3 363 "void(*int8 addr,int32 id,int8 ext)"
V L "addr" 3 364 "*int8"
V L "ext" 3 364 "int8"
F G "can_get_id" 3 364 "int32(*int8 addr,int8 ext)"
V L "id" 3 365 "int32"
V L "data" 3 365 "*int8"
V L "len" 3 365 "int8"
V L "priority" 3 365 "int8"
V L "ext" 3 365 "int8"
V L "rtr" 3 365 "int8"
F G "can_putd" 3 365 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "id" 3 366 "int32"
V L "data" 3 366 "*int8"
V L "len" 3 366 "int8"
V L "stat" 3 366 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 3 366 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
D G "can_debug" 2 61 ""
D G "can_kbhit" 2 66 "()                 (RXB0CON.rxful || RXB1CON.rxful)"
D G "can_tbe" 2 67 "()                   (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq)"
D G "can_abort" 2 68 "()                 (CANCON.abat=1)"
C L "can_getd" 2 65 11 "FUNCTION"
F G "can_init" 2 88 "void()"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_init" 2 65 1 "FUNCTION"
C L "can_set_baud" 2 65 6 "FUNCTION"
F G "can_set_baud" 2 127 "void()"
V L "mode" 2 140 "CAN_OP_MODE"
F G "can_set_mode" 2 140 "void(CAN_OP_MODE mode)"
C L "can_set_id" 2 65 8 "FUNCTION"
V L "addr" 2 160 "*int8"
V L "id" 2 160 "int32"
V L "ext" 2 160 "int8"
F G "can_set_id" 2 160 "void(*int8 addr,int32 id,int8 ext)"
V L "ptr" 2 161 "*int8"
C L "can_set_id" 2 65 2 "FUNCTION"
C L "can_set_id" 2 65 2 "FUNCTION"
C L "can_set_id" 2 65 2 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 2 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_set_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 9 "FUNCTION"
V L "addr" 2 220 "*int8"
V L "ext" 2 220 "int8"
F G "can_get_id" 2 220 "int32(*int8 addr,int8 ext)"
V L "ret" 2 221 "int32"
V L "ptr" 2 222 "*int8"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_get_id" 2 65 1 "FUNCTION"
C L "can_putd" 2 65 15 "FUNCTION"
V L "id" 2 274 "int32"
V L "data" 2 274 "*int8"
V L "len" 2 274 "int8"
V L "priority" 2 274 "int8"
V L "ext" 2 274 "int8"
V L "rtr" 2 274 "int8"
F G "can_putd" 2 274 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "i" 2 275 "int8"
V L "txd0" 2 276 "*int8"
V L "port" 2 277 "int8"
C L "can_putd" 2 65 2 "FUNCTION"
C L "can_putd" 2 65 1 "FUNCTION"
C L "can_putd" 2 65 1 "FUNCTION"
C L "can_putd" 2 65 1 "FUNCTION"
C L "can_putd" 2 65 1 "FUNCTION"
C L "can_getd" 2 65 11 "FUNCTION"
V L "id" 2 357 "int32"
V L "data" 2 357 "*int8"
V L "len" 2 357 "int8"
V L "stat" 2 357 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
F G "can_getd" 2 358 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
V L "i" 2 359 "int8"
V L "ptr" 2 360 "*int8"
C L "can_getd" 2 65 1 "FUNCTION"
V G "s" 0 14 "int8[8]"
V G "i" 0 15 "int8" "Fonctions"
F G "MAIN" 0 21 "void()"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
